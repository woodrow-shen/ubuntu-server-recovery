
if loadfont /boot/grub/font.pf2 ; then
	set gfxmode=auto
	insmod efi_gop
	insmod efi_uga
	insmod gfxterm
	terminal_output gfxterm
fi

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray

set timeout=5

echo "[grub.cfg] begin"
set gfxpayload=keep

if [ -s /boot/grub/grubenv ]; then
        echo "[grub.cfg] grubenv detected"
        load_env -f /boot/grub/grubenv
fi

search --no-floppy --set installer_device --label "${installerfslabel}"
echo "[grub.cfg] installer_device: ${installer_device}"
if [ "${installer_device}" != "" ]; then
    # if boot from installer, override recovery_type and recovery_label
    set recovery_type='headless_installer'
    set recovery_label=$installerfslabel
    #The UUID of LIVE_MEDIA needs to be update, which be done in ubuntu-classic-recovery-image build script
    set LIVE_MEDIA="live-media=/dev/disk/by-uuid/###INSTALLER_UUID###"
fi

echo "[grub.cfg] recovery_type: ${recovery_type}"
echo "[grub.cfg] recovery_label: ${recovery_label}"
echo "[grub.cfg] LIVE_MEDIA: ${LIVE_MEDIA}"

if [ "${recovery_type}" = "" ]; then
        # load normal system
        echo "[grub.cfg] load normal system"
        set prefix=($root)'/efi/ubuntu'
        configfile $prefix/grub.cfg
else
        # load recovery system
        echo "[grub.cfg] load ${recovery_type} system"
        search --no-floppy --set --label "${recovery_label}"
        echo "[grub.cfg] root: ${root}"
        echo "[grub.cfg] loading kernel..."
        linux	($root)/casper/vmlinuz  file=/cdrom/preseed/oem-ubuntu-server.seed boot=casper ${LIVE_MEDIA} union=aufs recoverytype=${recovery_type} recoveryos=ubuntu_classic_curtin recoverylabel=${recovery_label} quiet splash panic=-1 fixrtc net.ifnames=0 modprobe.blacklist=rsi_sdio,rsi_91x ---
        echo "[grub.cfg] loading initrd..."
        if [ -f ($root)/casper/initrd.lz ];then
            initrd	($root)/casper/initrd.lz
        elif [ -f ($root)/casper/initrd.gz ];then
            initrd	($root)/casper/initrd.gz
        else
            initrd	($root)/casper/initrd
        fi
        echo "[grub.cfg] boot..."
        boot
fi

